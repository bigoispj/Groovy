// Dynamic typing and Java integration
def greet(name) {
    println("Hello, $name!")
}

greet("Alice")
greet(42)

import java.time.LocalDate

// Closures and higher-order functions
def calculateAge(birthDate, closure) {
    def today = LocalDate.now()
    closure(today.year - birthDate.year)
}

calculateAge(LocalDate.of(1990, 5, 15)) { age ->
    println("You are $age years old.")
}

// Metaprogramming and DSL support
class Calculator {
    def multiply(int a, int b) {
        a * b
    }
}

Calculator.metaClass {
    divide = { int a, int b -> a / b }
}

def calc = new Calculator()
println(calc.multiply(5, 4))
println(calc.divide(10, 2))

// Scripting capabilities
def fruits = ['apple', 'banana', 'cherry']
fruits.each { fruit ->
    println(fruit.toUpperCase())
}

// Gradle and build automation
task hello {
    doLast {
        println("Hello from Gradle!")
    }
}

// Using DSL to define build configurations
task compile(type: GroovyCompile) {
    source = fileTree('src/main/groovy')
    destinationDir = file('build/classes')
}

// Static typing with @TypeChecked
import groovy.transform.TypeChecked

@TypeChecked
def sum(int a, int b) {
    a + b
}

def result = sum(3, 4)
println("The sum is $result.")
